0 info it worked if it ends with ok
1 verbose cli [ 'node',
1 verbose cli   '/Users/rafaelyepesgarcia/.npm-packages/bin/npm',
1 verbose cli   'publish',
1 verbose cli   './' ]
2 info using npm@2.9.1
3 info using node@v0.12.2
4 verbose node symlink /usr/local/bin/node
5 verbose publish [ './' ]
6 silly cache add args [ './', null ]
7 verbose cache add spec ./
8 silly cache add parsed spec { raw: './',
8 silly cache add   scope: null,
8 silly cache add   name: null,
8 silly cache add   rawSpec: './',
8 silly cache add   spec: '/Users/rafaelyepesgarcia/MyProjects/madge-badoo',
8 silly cache add   type: 'directory' }
9 verbose addLocalDirectory /Users/rafaelyepesgarcia/.npm/madge-badoo/0.6.0/package.tgz not in flight; packing
10 verbose tar pack [ '/Users/rafaelyepesgarcia/.npm/madge-badoo/0.6.0/package.tgz',
10 verbose tar pack   '/Users/rafaelyepesgarcia/MyProjects/madge-badoo' ]
11 verbose tarball /Users/rafaelyepesgarcia/.npm/madge-badoo/0.6.0/package.tgz
12 verbose folder /Users/rafaelyepesgarcia/MyProjects/madge-badoo
13 info prepublish madge-badoo@0.6.0
14 verbose addLocalTarball adding from inside cache /Users/rafaelyepesgarcia/.npm/madge-badoo/0.6.0/package.tgz
15 silly cache afterAdd madge-badoo@0.6.0
16 verbose afterAdd /Users/rafaelyepesgarcia/.npm/madge-badoo/0.6.0/package/package.json not in flight; writing
17 verbose afterAdd /Users/rafaelyepesgarcia/.npm/madge-badoo/0.6.0/package/package.json written
18 silly publish { name: 'madge-badoo',
18 silly publish   version: '0.6.0',
18 silly publish   author:
18 silly publish    { name: 'Patrik Henningsson',
18 silly publish      email: 'patrik.henningsson@gmail.com' },
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git://github.com/rafayepes/madge-badoo.git' },
18 silly publish   homepage: 'https://github.com/rafayepes/madge-badoo',
18 silly publish   license: 'MIT',
18 silly publish   description: 'Create graphs from your CommonJS or AMD module dependencies.',
18 silly publish   keywords:
18 silly publish    [ 'AMD',
18 silly publish      'RequireJS',
18 silly publish      'require',
18 silly publish      'module',
18 silly publish      'circular',
18 silly publish      'dependency',
18 silly publish      'dependencies',
18 silly publish      'graphviz',
18 silly publish      'graph' ],
18 silly publish   engines: [ 'node >= 0.8.0' ],
18 silly publish   scripts: { test: 'grunt' },
18 silly publish   dependencies:
18 silly publish    { 'amdetective-badoo': '0.0.5',
18 silly publish      'coffee-script': '1.3.3',
18 silly publish      colors: '^1.1.2',
18 silly publish      commander: '^2.8.1',
18 silly publish      commondir: '^1.0.1',
18 silly publish      detective: '^4.2.0',
18 silly publish      'detective-es6': '1.1.2',
18 silly publish      graphviz: '0.0.8',
18 silly publish      'react-tools': '^0.13.3',
18 silly publish      resolve: '^1.1.6',
18 silly publish      'uglify-js': '^1.3.5',
18 silly publish      walkdir: '0.0.10' },
18 silly publish   devDependencies:
18 silly publish    { grunt: '^0.4.5',
18 silly publish      'grunt-cli': '^0.1.13',
18 silly publish      'grunt-contrib-jshint': '^0.11.3',
18 silly publish      'grunt-mocha-test': '^0.12.7',
18 silly publish      'grunt-release': '^0.13.0',
18 silly publish      mocha: '^2.3.3',
18 silly publish      should: '*' },
18 silly publish   main: './lib/madge',
18 silly publish   bin: { madge: './bin/madge' },
18 silly publish   readme: '# MaDGe - Module Dependency Graph\n\n[![Build Status](https://secure.travis-ci.org/pahen/madge.png)](http://travis-ci.org/pahen/madge)\n\nCreate graphs from your [CommonJS](http://nodejs.org/api/modules.html), [AMD](https://github.com/amdjs/amdjs-api/wiki/AMD) or [ES6](https://people.mozilla.org/~jorendorff/es6-draft.html) module dependencies. Could also be useful for finding circular dependencies in your code. Tested on [Node.js](http://nodejs.org/) and [RequireJS](http://requirejs.org/) projects. Dependencies are calculated using static code analysis. CommonJS dependencies are found using James Halliday\'s [detective](https://github.com/substack/node-detective), for AMD I\'m using [amdetective](https://www.npmjs.org/package/amdetective) and for ES6 [detective-es6](https://www.npmjs.com/package/detective-es6) is used. Modules written in [CoffeeScript](http://coffeescript.org/) with extension .coffee are supported and will automatically be compiled on-the-fly.\n\n## Examples\nHere\'s a very simple example of a generated image.\n\n![](https://github.com/pahen/node-madge/raw/master/examples/small.png)\n\n - blue = has dependencies\n - green = has no dependencies\n - red = has circular dependencies\n\nHere\'s an example generated from the [Express](https://github.com/visionmedia/express) project.\n\n![](https://github.com/pahen/node-madge/raw/master/examples/express.png)\n\nAnd some terminal usage.\n\n![](https://github.com/pahen/node-madge/raw/master/examples/terminal.png)\n\n# Installation\n\nTo install as a library:\n\n\t$ npm install madge\n\nTo install the command-line tool:\n\n\t$ sudo npm -g install madge\n\n## Graphviz (optional)\n\nOnly required if you want to generate the visual graphs using [Graphviz](http://www.graphviz.org/).\n\n### Mac OS X\n\n\t$ sudo port install graphviz\n\n### Ubuntu\n\n\t$ sudo apt-get install graphviz\n\n# API\n\n\tvar madge = require(\'madge\');\n\tvar dependencyObject = madge(\'./\');\n\tconsole.log(dependencyObject.tree);\n\n## madge(src, opts)\n\n{Object|Array|String} **src** (required)\n\n- Object - a dependency tree.\n- Array - an Array of directories to scan.\n- String - a directory to scan.\n\n{Object} **opts** (optional)\n\n- {String} **format**. The module format to expect, \'cjs\', \'amd\' or \'es6\'. Commonjs (cjs) is the default format.\n- {String} **exclude**. String from which a regex will be constructed for excluding files from the scan.\n- {Boolean} **breakOnError**. True if the parser should stop on parse errors and when modules are missing, false otherwise. Defaults to false.\n- {Boolean} **optimized**. True if the parser should read modules from a optimized file (r.js). Defaults to false.\n- {Boolean} **findNestedDependencies**. True if nested dependencies should be found in AMD modules. Defaults to false.\n- {String} **mainRequireModule**. Name of the module if parsing an optimized file (r.js), where the main file used `require()` instead of `define`. Defaults to `\'\'`.\n- {String} **requireConfig**. Path to RequireJS config used to find shim dependencies and path aliases. Not used by default.\n- {Function} **onParseFile**. Function to be called when parsing a file (argument will be an object with "filename" and "src" property set).\n- {Function} **onAddModule** . Function to be called when adding a module to the module tree (argument will be an object with "id" and "dependencies" property set).\n- {Array} **extensions**. List of file extensions which are considered. Defaults to `[\'.js\']`.\n\n## dependency object (returned from madge)\n\n#### .opts\n\nOptions object passed used in the constructor.\n\n#### .tree\n\nDependency tree object. Can be overwritten with an object in the format:\n\n\t{\n\t     \'module1\': [\'dep1a\', \'dep1b\'],\n\t     \'module2\': [\'dep2a\']\n\t}\n\n#### .obj()\n\nAlias to the tree property.\n\n#### .circular()\n\nReturns all the modules with circular dependencies.\n\n#### .depends()\n\nReturns a list of modules that depends on a given module.\n\n#### .dot()\n\nGet a DOT representation of the module dependency graph.\n\n#### .image(opts, callback)\n\nGet an image representation of the module dependency graph.\n\n- {Object} **opts** (required).\n\t- {String} **layout**. The layout to use. Defaults to \'DOT\'.\n\t- {String} **fontFace**. The font face to use. Defaults to \'Times-Roman\'.\n\t- {Object} **imageColors**. Object with color information (all colors are strings containing hex values).\n\t\t- {String} **bgcolor**. The backgound color.\n\t\t- {String} **edge**. The edge color.\n\t\t- {String} **dependencies**. The color for dependencies and for text if fontColor is not present.\n\t\t- {String} **fontColor**. The color for text.\n- {Function} **callback** (required). Receives the rendered image as the first argument.\n\n# CLI\n\n\tUsage: madge [options] <file|dir ...>\n\n\tOptions:\n\n\t-h, --help                       output usage information\n\t-V, --version                    output the version number\n\t-f, --format <name>              format to parse (amd/cjs/es6)\n\t-s, --summary                    show summary of all dependencies\n\t-c, --circular                   show circular dependencies\n\t-d, --depends <id>               show modules that depends on the given id\n\t-x, --exclude <regex>            a regular expression for excluding modules\n\t-t, --dot                        output graph in the DOT language\n\t-i, --image <filename>           write graph to file as a PNG image\n\t-l, --layout <name>              layout engine to use for image graph (dot/neato/fdp/sfdp/twopi/circo)\n\t-b, --break-on-error             break on parse errors & missing modules\n\t-n, --no-colors                  skip colors in output and images\n\t-r, --read                       skip scanning folders and read JSON from stdin\n\t-C, --config <filename>          provide a config file\n\t-R, --require-config <filename>  include shim dependencies and path aliases found in RequireJS config file\n\t-O, --optimized                  if given file is optimized with r.js\n\t-M  --main-require-module        name of the primary RequireJS module, if it\'s included with `require()`\n\t-j  --json                       output dependency tree in json\n\n\n## Examples:\n\n### List all module dependencies (CommonJS)\n\n\t$ madge /path/src\n\n### List all module dependencies (AMD)\n\n\t$ madge --format amd /path/src\n\n### List all module dependencies (ES6)\n\n\t$ madge --format es6 /path/src\n\n### Finding circular dependencies\n\n\t$ madge --circular /path/src\n\n### Show modules that depends on a given module\n\n\t$ madge --depends \'wheels\' /path/src\n\n### Excluding modules\n\n\t$ madge --exclude \'^foo$|^bar$|^tests\' /path/src\n\n### Save graph as a PNG image (graphviz required)\n\n\t$ madge --image graph.png /path/src\n\n### Save graph as a [DOT](http://en.wikipedia.org/wiki/DOT_language) file for further processing (graphviz required)\n\n\t$ madge --dot /path/src > graph.gv\n\n### Run on optimized file by r.js (RequireJS optimizer)\n\t$ r.js -o app-build.js\n\t$ madge --format amd --optimized app-build.js\n\n### Include shim dependencies found in RequireJS config\n\t$ madge --format amd --require-config path/config.js path/src\n\n### Pipe predefined results (the example image was produced with the following command)\n\n\t$ cat << EOF | madge --read --image example.png\n\t{\n\t\t"a": ["b", "c", "d"],\n\t\t"b": ["c"],\n\t\t"c": [],\n\t\t"d": ["a"]\n\t}\n\tEOF\n\n## Config (use with --config)\n\n\t{\n\t    "format": "amd",\n\t    "image": "dependencyMap.png",\n\t    "fontFace": "Arial",\n\t    "fontSize": "14px",\n\t    "imageColors": {\n\t        "noDependencies" : "#0000ff",\n\t        "dependencies" : "#00ff00",\n\t        "circular" : "#bada55",\n\t        "edge" : "#666666",\n\t        "bgcolor": "#ffffff"\n\t    }\n\t}\n\n# FAQ\n\n## The image produced by madge is very hard to read, what\'s wrong?\n\nTry running madge with a different layout, here\'s a list of the ones you can try:\n\n* **dot**\t"hierarchical" or layered drawings of directed graphs. This is the default tool to use if edges have directionality.\n\n* **neato** "spring model\'\' layouts.  This is the default tool to use if the graph is not too large (about 100 nodes) and you don\'t know anything else about it. Neato attempts to\nminimize a global energy function, which is equivalent to statistical multi-dimensional scaling.\n\n* **fdp**\t"spring model\'\' layouts similar to those of neato, but does this by reducing forces rather than working with energy.\n\n* **sfdp** multiscale version of fdp for the layout of large graphs.\n\n* **twopi** radial layouts, after Graham Wills 97. Nodes are placed on concentric circles depending their distance from a given root node.\n\n* **circo** circular layout, after Six and Tollis 99, Kauffman and Wiese 02. This is suitable for certain diagrams of multiple cyclic structures, such as certain telecommunications networks.\n\n# Running tests\n\n\t$ npm test\n\n# Release Notes\n\n## v0.5.2 (October 16, 2015)\nUpdated dependency resolve to latest version.\n\n## v0.5.1 (October 15, 2015)\nUpdated dependencies to newer versions (Thanks to Martin Kapp).\n\n## v0.5.0 (April 2, 2015)\nAdded support for ES6 modules (Thanks to Marc Laval).\nAdded support for setting custom file extension name (Thanks to Marc Laval).\n\n## v0.4.1 (December 19, 2014)\nFixed issues with absolute paths for modules IDs in Windows (all tests should now pass on Windows too).\n\n## v0.4.0 (December 19, 2014)\nAdd support for JSX (React) and additional module paths (Thanks to Ben Lowery).\nFix for detecting presence of AMD or CommonJS modules (Thanks to Aaron Russ).\nNow resolves the module IDs from the RequireJS paths-config properly (Thanks to russaa).\nAdded support for option findNestedDependencies to find nested dependencies in AMD modules.\n\n## v0.3.5 (Septemper 22, 2014)\nFix issue with number of graph node lines increased with each render (Thanks to Colin H. Fredericks).\n\n## v0.3.4 (Septemper 04, 2014)\nCorrectly detect circular dependencies when using path aliases in RequireJS config (Thanks to Nicolas Ramz).\n\n## v0.3.3 (July 11, 2014)\nFixed bug with relative paths in AMD not handled properly when checking for cyclic dependencies.\n\n## v0.3.2 (June 25, 2014)\nHandle anonymous require() as entry in the RequireJS optimized file (Thanks to Benjamin Horsleben).\n\n## v0.3.1 (June 03, 2014)\nApply exclude to RequireJS shim dependencies (Thanks to Michael White).\n\n## v0.3.0 (May 25, 2014)\nAdded support for onParseFile and onAddModule options (Thanks to Brandon Selway).\nAdded JSON output option (Thanks to Drew Foehn).\nFix for optimized files including dependency information for excluded modules (Thanks to Drew Foehn). Fixes [issue](https://github.com/pahen/madge/issues/26).\n\n## v0.2.0 (April 17, 2014)\nAdded support for including shim dependencies found in RequiredJS config (specify with option -R).\n\n## v0.1.9 (February 17, 2014)\nEnsure forward slashes are used in modules paths (Windows).\n\n## v0.1.8 (January 27, 2014)\nAdded support for reading AMD dependencies from a r.js optimized file by using option -O.\n\n## v0.1.7 (September 20, 2013)\nAdded missing fontsize option when generating images.\n\n## v0.1.6 (September 04, 2013)\nAMD plugins are now ignored as dependencies. Fixes [issue](https://github.com/pahen/grunt-madge/issues/1).\n\n## v0.1.5 (September 04, 2013)\nFixed Windows [issue](https://github.com/pahen/node-madge/issues/17) when reading from standard input with --read.\n\n## v0.1.4 (January 10, 2013)\nSwitched library for walking directory tree which should solve issues on [Windows](https://github.com/pahen/node-madge/issues/8).\n\n## v0.1.3 (December 28, 2012)\nAdded proper exit code when running "madge --circular" so it can be used in build scripts.\n\n## v0.1.2 (November 15, 2012)\nRelative AMD module identifiers (if the first term is "." or "..") are now resolved.\n\n## v0.1.1 (September 3, 2012)\nTweaked circular dependency path output.\n\n## v0.1.0 (September 3, 2012)\nComplete path in circular dependencies is now printed (and marked as red in image graphs).\n\n## v0.0.5 (August 8, 2012)\nAdded support for CoffeeScript. Files with extension .coffee will automatically be compiled on-the-fly.\n\n## v0.0.4 (August 17, 2012)\nFixed dependency issues with Node.js v0.8.\n\n## v0.0.3 (July 01, 2012)\nAdded support for Node.js v0.8 and dropped support for lower versions.\n\n## v0.0.2 (May 21, 2012)\nAdded ability to read config file and customize colors.\n\n## v0.0.1 (May 20, 2012)\nInitial release.\n\n# License\n\n(The MIT License)\n\nCopyright (c) 2012 Patrik Henningsson &lt;patrik.henningsson@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: '379d5c51abafa1470adf5b2fa5699dfb7596186f',
18 silly publish   bugs: { url: 'https://github.com/rafayepes/madge-badoo/issues' },
18 silly publish   _id: 'madge-badoo@0.6.0',
18 silly publish   _shasum: 'd76094d15bf430ecdbab04acf758dc4bff083056',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name madge-badoo
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://registry.npmjs.org/
23 silly mapToRegistry uri https://registry.npmjs.org/madge-badoo
24 verbose publish registryBase https://registry.npmjs.org/
25 silly publish uploading /Users/rafaelyepesgarcia/.npm/madge-badoo/0.6.0/package.tgz
26 verbose request uri https://registry.npmjs.org/madge-badoo
27 verbose request sending authorization for write operation
28 info attempt registry request try #1 at 09:48:52
29 verbose request using bearer token for auth
30 verbose request id 4d7223ee15998448
31 http request PUT https://registry.npmjs.org/madge-badoo
32 http 403 https://registry.npmjs.org/madge-badoo
33 verbose headers { 'content-type': 'application/json',
33 verbose headers   'cache-control': 'max-age=60',
33 verbose headers   'content-length': '95',
33 verbose headers   'accept-ranges': 'bytes',
33 verbose headers   date: 'Fri, 23 Oct 2015 08:48:53 GMT',
33 verbose headers   via: '1.1 varnish',
33 verbose headers   connection: 'keep-alive',
33 verbose headers   'x-served-by': 'cache-fra1226-FRA',
33 verbose headers   'x-cache': 'MISS',
33 verbose headers   'x-cache-hits': '0',
33 verbose headers   'x-timer': 'S1445590132.243147,VS0,VE1622' }
34 verbose request invalidating /Users/rafaelyepesgarcia/.npm/registry.npmjs.org/madge-badoo on PUT
35 error publish Failed PUT 403
36 verbose stack Error: "You cannot publish over the previously published version 0.6.0." : madge-badoo
36 verbose stack     at CachingRegistryClient.<anonymous> (/Users/rafaelyepesgarcia/.npm-packages/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:247:14)
36 verbose stack     at Request._callback (/Users/rafaelyepesgarcia/.npm-packages/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:170:14)
36 verbose stack     at Request.self.callback (/Users/rafaelyepesgarcia/.npm-packages/lib/node_modules/npm/node_modules/request/request.js:368:22)
36 verbose stack     at Request.emit (events.js:110:17)
36 verbose stack     at Request.<anonymous> (/Users/rafaelyepesgarcia/.npm-packages/lib/node_modules/npm/node_modules/request/request.js:1219:14)
36 verbose stack     at Request.emit (events.js:129:20)
36 verbose stack     at IncomingMessage.<anonymous> (/Users/rafaelyepesgarcia/.npm-packages/lib/node_modules/npm/node_modules/request/request.js:1167:12)
36 verbose stack     at IncomingMessage.emit (events.js:129:20)
36 verbose stack     at _stream_readable.js:908:16
36 verbose stack     at process._tickCallback (node.js:355:11)
37 verbose statusCode 403
38 verbose pkgid madge-badoo
39 verbose cwd /Users/rafaelyepesgarcia/MyProjects/madge-badoo
40 error Darwin 14.5.0
41 error argv "node" "/Users/rafaelyepesgarcia/.npm-packages/bin/npm" "publish" "./"
42 error node v0.12.2
43 error npm  v2.9.1
44 error code E403
45 error "You cannot publish over the previously published version 0.6.0." : madge-badoo
46 error If you need help, you may report this error at:
46 error     <https://github.com/npm/npm/issues>
47 verbose exit [ 1, true ]
